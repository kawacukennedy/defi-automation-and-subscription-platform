name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint

    - name: Run backend linting
      run: |
        cd backend
        npm run lint || echo "No lint script for backend"

    - name: Run frontend tests
      run: |
        cd frontend
        npm test || echo "No tests configured"

    - name: Run backend tests
      run: |
        cd backend
        npm test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Deploy to Vercel (Frontend)
      if: success()
      run: |
        cd frontend
        npx vercel --prod --yes
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    - name: Deploy to Railway (Backend)
      if: success()
      run: |
        cd backend
        railway deploy
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  contract-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Flow CLI
      run: |
        wget -O flow-cli.tar.gz https://github.com/onflow/flow-cli/releases/download/v1.4.2/flow-cli_1.4.2_linux_amd64.tar.gz
        tar -xzf flow-cli.tar.gz
        sudo mv flow /usr/local/bin/

    - name: Test Cadence contracts
      run: |
        cd contracts
        # Add contract testing commands here
        echo "Running contract tests..."
        # flow test

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run security audit
      run: |
        cd frontend
        npm audit --audit-level high

        cd ../backend
        npm audit --audit-level high

    - name: CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, typescript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3